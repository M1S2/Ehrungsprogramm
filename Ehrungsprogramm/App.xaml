<Application
    x:Class="Ehrungsprogramm.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:localControls="clr-namespace:Ehrungsprogramm.Controls"
    xmlns:converters="clr-namespace:Ehrungsprogramm.Converters"
    Startup="OnStartup"
    Exit="OnExit"
    DispatcherUnhandledException="OnDispatcherUnhandledException">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Generic.xaml"/>

                <ResourceDictionary Source="/Styles/_FontSizes.xaml" />
                <ResourceDictionary Source="/Styles/_Thickness.xaml" />
                <ResourceDictionary Source="/Styles/MetroWindow.xaml" />
                <ResourceDictionary Source="/Styles/TextBlock.xaml" />
                <!--
                MahApps.Metro resource dictionaries.
                Learn more about using MahApps.Metro at https://mahapps.com/
                -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:EnumToLocalizedStringConverter x:Key="EnumLocalizedStringConverter"/>
            
            <!-- Style for a check box based control using an eye icon instead of the tick box (visible / not visible) -->
            <!-- Based on: https://learn.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/ms752319(v=vs.85)?redirectedfrom=MSDN -->
            <Style x:Key="CheckBoxEyeStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border>
                                            <Rectangle StrokeThickness="1" Stroke="{StaticResource MahApps.Brushes.Gray1}" StrokeDashArray="1 2"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                                <BulletDecorator.Bullet>
                                    <Grid>
                                        <controls:FontIcon x:Name="CheckMark" Glyph="&#xE7B3;" FontSize="30" Margin="1" Foreground="{StaticResource MahApps.Brushes.Accent}"/>
                                        <Line x:Name="CheckMarkStrikeThrough" X1="0" Y1="{Binding ElementName=CheckMark, Path=ActualHeight}" X2="{Binding ElementName=CheckMark, Path=ActualWidth}" Y2="0" Stroke="{StaticResource MahApps.Brushes.Gray2}" StrokeThickness="2" Visibility="Collapsed"/>
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMarkStrikeThrough" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="CheckMark" Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray2}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="CheckMarkStrikeThrough" Property="Stroke" Value="{StaticResource MahApps.Brushes.Gray1}"/>
                                    <Setter TargetName="CheckMark" Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray1}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="CheckMarkStrikeThrough" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="CheckMark" Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray6}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Style for a GroupItem that stays on top of a ListView control until the next GroupItems is scrolled to the top
                This is used on the Reward pages for example.
                The following example shows the usage in a ListView:
            
                <ListView>
                    <ListView.GroupStyle>
                        <GroupStyle ContainerStyle="{StaticResource GroupItemControlTemplateStickyScrollHeader}"/>
                    </ListView.GroupStyle>
                </ListView>
            -->
            <Style x:Key="GroupItemControlTemplateStickyScrollHeader" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <!-- https://stackoverflow.com/questions/14801102/wpf-scroll-itemcontrol-content-fixed-header -->
                        <ControlTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition  Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" localControls:StickyScrollHeader.AttachToControl="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Grid}}">
                                    <Border Background="{StaticResource MahApps.Brushes.Gray}" BorderBrush="{StaticResource MahApps.Brushes.Accent}" BorderThickness="1">
                                        <StackPanel Margin="5" Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name, Converter={StaticResource EnumLocalizedStringConverter}}" FontSize="{StaticResource LargeFontSize}" VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding ItemCount, StringFormat=({0})}" FontSize="{StaticResource LargeFontSize}" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                                <ItemsPresenter Grid.Row="1"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DataTemplate for a button showing an info icon
                This template is used on the Reward pages for example.
                The following example shows the usage in a GridView:
            
                <GridView>
                    <GridViewColumn CellTemplate="{StaticResource CellTemplateDetail}"/>
                </GridView>
            -->
            <DataTemplate x:Key="CellTemplateDetail">
                <Button Margin="0,5,0,5" x:Name="DetailsButton" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Background="{StaticResource MahApps.Brushes.Gray2}" Visibility="Hidden" Width="30" Height="30" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.PersonDetailCommand}" CommandParameter="{Binding}">
                    <controls:FontIcon FontSize="20" Glyph="&#xEA1F;"/>
                </Button>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="True">
                        <Setter TargetName="DetailsButton" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                        <Setter TargetName="DetailsButton" Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>
