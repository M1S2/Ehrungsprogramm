<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Ehrungsprogramm</value>
  </data>
  <data name="ErrorCsvFileParserBirthDate" xml:space="preserve">
    <value>Das Geburtsdatum konnte nicht richtig eingelesen werden ({0})!</value>
  </data>
  <data name="ErrorCsvFileParserColumnErrors" xml:space="preserve">
    <value>Die folgenden Spalten Fehler sind in der CSV Datei aufgetreten:
{0}Einlesen abgebrochen.</value>
  </data>
  <data name="ErrorCsvFileParserColumnMissing" xml:space="preserve">
    <value>- Benötigte Spalte "{0}" fehlt</value>
  </data>
  <data name="ErrorCsvFileParserColumnMissingFunctions" xml:space="preserve">
    <value>- Benötigte Spalten für die Funktionen fehlen ("{0}", "{1}", "{2}"). Mindestens eine Gruppe ist nötig.</value>
  </data>
  <data name="ErrorCsvFileParserColumnMissingRewards" xml:space="preserve">
    <value>- Benötigte Spalten für die Ehrungen fehlen ("{0}", "{1}", "{2}"). Mindestens eine Gruppe ist nötig.</value>
  </data>
  <data name="ErrorCsvFileParserEntryDate" xml:space="preserve">
    <value>Das Eintrittsdatum konnte nicht richtig eingelesen werden ({0})!</value>
  </data>
  <data name="ErrorCsvFileParserFileDoesntExist" xml:space="preserve">
    <value>Die Datei existiert nicht ("{0}").</value>
  </data>
  <data name="ErrorCsvFileParserFileOpenFailed" xml:space="preserve">
    <value>Öffnen der CSV Datei fehlgeschlagen ("{0}").
Das kann daran liegen, dass die Datei in einem anderen Programm geöffnet is (z.B. Excel).</value>
  </data>
  <data name="ErrorCsvFileParserFunctionEndDate" xml:space="preserve">
    <value>Das Funktionsenddatum konnte nicht richtig eingelesen werden ({0}, Function: {1})!</value>
  </data>
  <data name="ErrorCsvFileParserFunctionStartDate" xml:space="preserve">
    <value>Das Funktionsstartdatum konnte nicht richtig eingelesen werden ({0}, Function: {1})!</value>
  </data>
  <data name="ErrorCsvFileParserFunctionStartEndDateSwapped" xml:space="preserve">
    <value>Das Funktionsenddatum ist früher als das Funktionsstartdatum (Start: {0}, Ende: {1}, Funktion: {2})!</value>
  </data>
  <data name="ErrorCsvFileParserRewardNumber" xml:space="preserve">
    <value>Die Ehrungs ID konnte nicht richtig eingelesen werden ({0}, Reward: {1})!</value>
  </data>
  <data name="ErrorCsvFileParserRewardObtainedDate" xml:space="preserve">
    <value>Das Ehrungsdatum konnte nicht richtig eingelesen werden ({0}, Reward: {1})!</value>
  </data>
  <data name="PrintAvailableString" xml:space="preserve">
    <value>Verfügbar</value>
  </data>
  <data name="PrintBirthdateString" xml:space="preserve">
    <value>Geburtsdatum</value>
  </data>
  <data name="PrintBLSVRewardOverviewString" xml:space="preserve">
    <value>BLSV Ehrungen Übersicht</value>
  </data>
  <data name="PrintBLSVScoreString" xml:space="preserve">
    <value>BLSV Punkte</value>
  </data>
  <data name="PrintCalculationDeadlineString" xml:space="preserve">
    <value>Stichtag</value>
  </data>
  <data name="PrintCountBLSVRewardsString" xml:space="preserve">
    <value>Anzahl BLSV Ehrungen</value>
  </data>
  <data name="PrintCountString" xml:space="preserve">
    <value>Anzahl</value>
  </data>
  <data name="PrintCountTSVRewardsString" xml:space="preserve">
    <value>Anzahl TSV Ehrungen</value>
  </data>
  <data name="PrintCSVFileString" xml:space="preserve">
    <value>CSV Datei</value>
  </data>
  <data name="PrintDescriptionString" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="PrintEffectiveYearsBoardMemberString" xml:space="preserve">
    <value>Effektive Jahre Vorstand</value>
  </data>
  <data name="PrintEffectiveYearsHeadOfDepartementString" xml:space="preserve">
    <value>Effektive Jahre Abteilungsleitung</value>
  </data>
  <data name="PrintEffectiveYearsOtherFunctionString" xml:space="preserve">
    <value>Effektive Jahre andere Funktion</value>
  </data>
  <data name="PrintEntrydateString" xml:space="preserve">
    <value>Eintrittsdatum</value>
  </data>
  <data name="PrintExportDateString" xml:space="preserve">
    <value>Export Datum</value>
  </data>
  <data name="PrintFirstNameString" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="PrintFunctionsString" xml:space="preserve">
    <value>Funktionen</value>
  </data>
  <data name="PrintFunctionString" xml:space="preserve">
    <value>Funktion</value>
  </data>
  <data name="PrintIDString" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="PrintMembershipYearsString" xml:space="preserve">
    <value>Mitgliedsjahre</value>
  </data>
  <data name="PrintNameString" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PrintObtainedDateString" xml:space="preserve">
    <value>Erhalten am</value>
  </data>
  <data name="PrintOnlyNewestRewardsAreShownString" xml:space="preserve">
    <value>Nur die neuesten, noch nicht erhaltenen Ehrungen sind aufgeführt.</value>
  </data>
  <data name="PrintPageString" xml:space="preserve">
    <value>Seite {0} von {1}</value>
  </data>
  <data name="PrintParsingErrorString" xml:space="preserve">
    <value>Einlesefehler</value>
  </data>
  <data name="PrintPeopleOverviewString" xml:space="preserve">
    <value>Personen Übersicht</value>
  </data>
  <data name="PrintPeopleString" xml:space="preserve">
    <value>Personen</value>
  </data>
  <data name="PrintPersonDetailsString" xml:space="preserve">
    <value>Person Details</value>
  </data>
  <data name="PrintPersonListFilteredWarningString" xml:space="preserve">
    <value>Achtung: Die Liste ist gefiltert (Filter: "{0}")! Insgesamt sind {1} Personen verfügbar!</value>
  </data>
  <data name="PrintRewardListFilteredWarningString" xml:space="preserve">
    <value>Achtung: Die Liste ist gefiltert (Nicht angezeigt werden: {0})! Insgesamt sind {1} Ehrungen verfügbar!</value>
  </data>
  <data name="PrintRewardsString" xml:space="preserve">
    <value>Ehrungen</value>
  </data>
  <data name="PrintRewardTypeTSVGold" xml:space="preserve">
    <value>TSV Gold</value>
  </data>
  <data name="PrintRewardTypeTSVHonorary" xml:space="preserve">
    <value>TSV Ehrenmitglied</value>
  </data>
  <data name="PrintRewardTypeTSVSilver" xml:space="preserve">
    <value>TSV Silber</value>
  </data>
  <data name="PrintScoreString" xml:space="preserve">
    <value>Punkte</value>
  </data>
  <data name="PrintStatusString" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="PrintTimePeriodString" xml:space="preserve">
    <value>Zeitraum</value>
  </data>
  <data name="PrintTSVRewardOverviewString" xml:space="preserve">
    <value>TSV Ehrungen Übersicht</value>
  </data>
  <data name="PrintTSVScoreString" xml:space="preserve">
    <value>TSV Punkte</value>
  </data>
  <data name="PrintVersionString" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="PrintYearsString" xml:space="preserve">
    <value>Jahre</value>
  </data>
</root>